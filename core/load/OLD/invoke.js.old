Coffeemaker.core.load.invoke = function(n, cbk) {

    var utils = Coffeemaker.core.utilities;

    if ( ! utils.check.isString(n) ) {

        if ( utils.check.isFunction(n) ) {

            return n;

        } else {

            return false;
        }


    } else {

        var path = n.split('.').join('/').split('/');
        var repo = path.shift();
        if (path.length) {
            repo += '/'+path.shift();
        }
        var name = path.join('/');

        var result;

        var option =repo.split('/').shift() ;
        switch (option) {

            case 'component':
                repo = repo.replace('component','components');
            case 'action':
                repo = repo.replace('action','actions');
                alert('repo/'+repo+'/'+name);
                result = utils.analyze.engine.getValue('repo/'+repo+'/'+name);
                break;
            case 'method':
                repo = repo.replace('method','methods');
            case 'rationale':
                repo = repo.replace('rationale','rationales');
            case 'actions':
            case 'components':
            case 'methods':
            case 'process':
            case 'rationales':
                alert(repo);
                result = utils.analyze.engine.getValue('repo/'+repo+'/'+name);
                break;

            default : 
                result = utils.analyze.engine.getValue('core/'+repo);
                if (result === false) result = utils.analyze.engine.getValue('core/'+name);
                break;

        }

        if ( utils.check.isObject(result) || utils.check.isFunction(result) ) {
            cbk(result); 
        } else {
            cbk(false);
        }

    }

}
